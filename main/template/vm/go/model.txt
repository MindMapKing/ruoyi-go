// ==========================================================================
// LV自动生成数据库操作代码，无需手动修改，重新生成会自动覆盖.
// 生成日期：{{.table.CreateTime}}
// 生成人：{{.table.FunctionAuthor}}
// ==========================================================================

package model

import (
    "robvi/app/common/model_cmn"
    "lostvip.com/db"
	"time"
)

// 数据表映射结构体
type {{.table.ClassName}} struct { {{range $index, $column := .table.Columns}}
	{{if eq $column.IsPk "1"}} {{$column.GoField}}       {{if eq $column.GoType "Time"}}time.Time{{else}}{{$column.GoType}}{{end}}         `json:"{{$column.HtmlField}}" xorm:"not null pk autoincr comment('{{$column.ColumnComment}}') {{$column.ColumnType}}"`   {{else}} {{$column.GoField}}    {{if eq $column.GoType "Time"}}time.Time{{else}}{{$column.GoType}}{{end}}         `json:"{{$column.ColumnName}}" xorm:"comment('{{$column.ColumnComment}}') {{$column.ColumnType}}"`   {{end}} {{end}}
    model_cmn.BaseModel `xorm:"extends"`
}

//映射数据表
func (e *{{.table.ClassName}}) TableName() string {
	return "{{.table.TbName}}"
}
// 增
func (e *{{.table.ClassName}}) Insert() (int64, error) {
	return db.Instance().Engine().Table("{{.table.TbName}}").Insert(e)
}
// 查
func (e *{{.table.ClassName}}) FindOne() (bool, error) {
	return db.Instance().Engine().Table("{{.table.TbName}}").Get(e)
}
// 改
func (e *{{.table.ClassName}}) Update() (int64, error) {
	return db.Instance().Engine().Table("{{.table.TbName}}").ID(e.{{.table.PkColumn.GoField}}).Update(e)
}
// 删
func (e *{{.table.ClassName}}) Delete() (int64, error) {
	return db.Instance().Engine().Table("{{.table.TbName}}").ID(e.{{.table.PkColumn.GoField}}).Delete(e)
}



