//	=========================================================================
//
// LV自动生成控制器相关代码，只生成一次，按需修改,默认再次生成不会覆盖.
// date：{{.table.CreateTime}}
// author：{{.table.FunctionAuthor}}
// ==========================================================================
package controller

import (
    "github.com/gin-gonic/gin"
    "lostvip.com/utils/lv_web"
    "lostvip.com/utils/lv_err"
    "lostvip.com/web/dto"
    "{{.table.ModuleName}}/internal/{{.table.PackageName}}/vo"
    "{{.table.ModuleName}}/internal/{{.table.PackageName}}/service"
    sysService "main/internal/system/service"
)
type {{.table.ClassName}}Controller struct{}
//	========================================================================
//
// api
// =========================================================================

// ListAjax 新增页面保存
func (w {{.table.ClassName}}Controller) ListAjax(c *gin.Context) {
	req := new(vo.Page{{.table.ClassName}}Req)
	err := c.ShouldBind(req)
	lv_err.HasErrAndPanic(err)
	var svc service.{{.table.ClassName}}Service
	result, total, _ := svc.ListByPage(req)
	lv_web.SucessPage(c, result, total)
}

// AddSave 新增页面保存
func (w {{.table.ClassName}}Controller) AddSave(c *gin.Context) {
	req := new(vo.Add{{.table.ClassName}}Req)
    err := c.ShouldBind(req)
    lv_err.HasErrAndPanic(err)
	var svc service.{{.table.ClassName}}Service

    var userService sysService.UserService
    user := userService.GetProfile(c)
    req.CreateBy = user.LoginName
	id, err := svc.AddSave(req)
    lv_err.HasErrAndPanic(err)
	lv_web.SucessData(c, id)
}

// EditSave 修改页面保存
func (w {{.table.ClassName}}Controller) EditSave(c *gin.Context) {
	req := new(vo.Edit{{.table.ClassName}}Req)
	err := c.ShouldBind(req)
    lv_err.HasErrAndPanic(err)
    var svc service.{{.table.ClassName}}Service
    var userService sysService.UserService
    user := userService.GetProfile(c)
    req.UpdateBy = user.LoginName
	err = svc.EditSave(req)
	lv_err.HasErrAndPanic(err)
	lv_web.Success(c, nil, "success")
}

// Remove 删除数据
func (w {{.table.ClassName}}Controller) Remove(c *gin.Context) {
	req := new(dto.RemoveReq)
	err := c.ShouldBind(req)
    lv_err.HasErrAndPanic(err)
	var svc service.{{.table.ClassName}}Service
	rs := svc.DeleteByIds(req.Ids)
	lv_web.SuccessData(c, rs)
}

// 导出
func (w {{.table.ClassName}}Controller) Export(c *gin.Context) {
	req := new(vo.Page{{.table.ClassName}}Req)
	err := c.ShouldBind(req)
    lv_err.HasErrAndPanic(err)
	var svc service.{{.table.ClassName}}Service
	url, err := svc.ExportAll(req)
	lv_err.HasErrAndPanic(err)
	lv_web.SucessDataMsg(c, url, url)
}
